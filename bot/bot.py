import os
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from main import get_products_from_db, get_random_products_from_db, get_products
import threading

TOKEN = 'ENTER_YOUR_BOT_TOKEN'
bot = telebot.TeleBot(TOKEN)

categories = {
    '–ú—É–∂—Å–∫–∞—è –æ–¥–µ–∂–¥–∞': 'manwear',
    '–ñ–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞': 'womanwear',
    '–î–µ—Ç—Å–∫–∞—è –æ–¥–µ–∂–¥–∞': 'childwear',
    '–ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã': 'headwear',
    '–°—É–º–∫–∏ –∏ —Ä—é–∫–∑–∞–∫–∏': 'bags_and_backpacks',
    '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã': 'accessory',
    '–ß–µ—Ö–ª—ã –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤': 'cases',
    '–î–æ–º–∞—à–Ω–∏–π —Ç–µ–∫—Å—Ç–∏–ª—å': 'textile',
    '–ü–æ—Å—É–¥–∞': 'tableware',
    '–î–ª—è –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞': 'interior',
    '–î–ª—è —à–∫–æ–ª—ã': 'school',
    '–î–ª—è –ø–ª—è–∂–∞': 'beach',
    '–î–ª—è —Å–ø–æ—Ä—Ç–∞': 'sports_goods',
    '–°—É–≤–µ–Ω–∏—Ä—ã –∏ –ø–æ–¥–∞—Ä–∫–∏': 'all_souvenirs',
    '–í—Å—è –æ–¥–µ–∂–¥–∞': 'odezhda',
    '–û–¥–µ–∂–¥–∞ plus size': 'size_plus',
    '–†–∞—Å–ø—Ä–æ–¥–∞–∂–∞': 'sale'
}

emoji_cart = "üõí"
emoji_price = "üí≤"
emoji_back = "üîô"
emoji_gift = "üéÅ"

parsing_in_progress = False


def main_menu(chat_id, message_id=None):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üíØ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="categories"))
    markup.add(InlineKeyboardButton("üòñ –Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –≤—ã–±—Ä–∞—Ç—å", callback_data="random"))
    if message_id:
        bot.edit_message_text("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞ –Ω–æ–≤—ã–π –≥–æ–¥ –¥–ª—è —Ç–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π –∏ –±–ª–∏–∑–∫–∏—Ö üéÖ", chat_id, message_id, reply_markup=markup)
    else:
        bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞ –Ω–æ–≤—ã–π –≥–æ–¥ –¥–ª—è —Ç–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π –∏ –±–ª–∏–∑–∫–∏—Ö üéÖ", reply_markup=markup)


def start_parsing(chat_id):
    global parsing_in_progress
    parsing_in_progress = True

    for category_slug in categories.values():
        get_products(category_slug, bot, chat_id)

    bot.send_message(chat_id, " –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!.")
    parsing_in_progress = False
    main_menu(chat_id)


@bot.message_handler(commands=['start'])
def start(message):
    global parsing_in_progress

    if not parsing_in_progress:
        bot.send_message(message.chat.id, " –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ üïï")
        threading.Thread(target=start_parsing, args=(message.chat.id,)).start()
    else:
        bot.send_message(message.chat.id, " –ü–∞—Ä—Å–∏–Ω–≥ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ üïï")


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if parsing_in_progress:
        bot.answer_callback_query(call.id, " –ü–∞—Ä—Å–∏–Ω–≥ –µ—â–µ –∏–¥–µ—Ç. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è üïï")
        return

    if call.data == "categories":
        markup = InlineKeyboardMarkup()
        for category_name, slug in categories.items():
            markup.add(InlineKeyboardButton(category_name, callback_data=f"category|{slug}"))
        markup.add(InlineKeyboardButton(emoji_back + " –ù–∞–∑–∞–¥", callback_data="back_to_main"))
        bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é üíó", call.message.chat.id, call.message.message_id, reply_markup=markup)

    elif call.data.startswith("category|"):
        category_slug = call.data.split("|")[1]
        products = get_products_from_db(category_slug)

        if not products:
            bot.answer_callback_query(call.id, f"–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category_slug} –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.")
            return

        markup = InlineKeyboardMarkup()
        message_text = f"–¢–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category_slug.capitalize()}:\n\n"
        markup.add(InlineKeyboardButton(emoji_back + " –ù–∞–∑–∞–¥", callback_data="categories"))
        for product in products:
            message_text += f"{emoji_cart} {product['name']} - {emoji_price} {product['price']} ‚ÇΩ\n"

        message_text += f"\n{emoji_gift} –°—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã:\n"
        for product in products:
            markup.add(InlineKeyboardButton(product['name'], url=product['link']))

        bot.edit_message_text(message_text, call.message.chat.id, call.message.message_id, reply_markup=markup)

    elif call.data == "back_to_main":
        main_menu(call.message.chat.id, call.message.message_id)

    elif call.data == "random":
        products = get_random_products_from_db()
        markup = InlineKeyboardMarkup()
        message_text = "üéÅ –°–ª—É—á–∞–π–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:\n\n"
        for product in products:
            message_text += f"{emoji_cart} {product['name']} - {emoji_price} {product['price']} ‚ÇΩ\n"
            markup.add(InlineKeyboardButton(product['name'], url=product['link']))

        markup.add(InlineKeyboardButton(emoji_back + " –ù–∞–∑–∞–¥", callback_data="back_to_main"))
        bot.edit_message_text(message_text, call.message.chat.id, call.message.message_id, reply_markup=markup)


bot.polling()
